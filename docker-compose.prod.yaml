version: '3.7'
services:
  web:
    container_name: nginx-webserver
    build:
      context: .
      dockerfile: nginx.Dockerfile
    command: [nginx-debug, '-g', 'daemon off;']
    restart: unless-stopped
    volumes:
      - ./:/var/www/html
      - .docker/nginx/nginx_template_local.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    networks:
      - app
    depends_on:
      - php

  db:
    container_name: database
    image: mysql:8
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    command: --innodb-use-native-aio=0
    environment: 
      # MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: admin
      MYSQL_USER: root
    env_file: ".env"
    volumes:
    - ./.dbdata:/var/lib/mysql
    ports:
    - 3306:3306  
    networks:
    - app

  php:
    container_name: php
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
    # environment:
    #   DB_USER: root
    #   DB_NAME: admin
    #   DB_PASSWORD: root
    #   DB_HOST: 'db'
    networks:
    - app
    volumes:
    - ./:/var/www/html    
    ports:
    -  9000:9000

  # composer:
  #   container_name: composer
  #   image: composer:latest
  #   command: ["composer", "install"]
  #   depends_on:
  #     - php
  #   volumes:
  #     - ./:/app
  #   restart: unless-stopped
  #   networks:
  #     - app
networks:
  app:
volumes:
  .dbdata: ~